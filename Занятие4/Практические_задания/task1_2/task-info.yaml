type: output
files:
- name: main.py
  visible: true
  placeholders:
  - offset: 225
    length: 84
    placeholder_text: "...)  # TODO составить регулярное выражение, которое находи\
      т первые две буквы слова"
    initial_state:
      length: 83
      offset: 225
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: r"\b\w\w")
  - offset: 360
    length: 15
    placeholder_text: ")  # TODO найти первые 2 буквы всех слов в строке"
    initial_state:
      length: 49
      offset: 359
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: .findall(word))
  text: |
    import re


    def task():
        word_list = [
            ",./ sdfsdf",
            "Ddfsdf",
            "@@##,sdfsdf",
            "123_sdfsdf",
            "123sdfsdf",
            ", s,dfsdf",
            "123, fewfew",
        ]

        two_char = re.compile(...)  # TODO составить регулярное выражение, которое находит первые две буквы слова

        for word in word_list:
            print(two_char)  # TODO найти первые 2 буквы всех слов в строке


    if __name__ == "__main__":
        task()
  learner_created: false
- name: __init__.py
  visible: false
  learner_created: false
- name: tests/output.txt
  visible: false
  text: |
    ['sd']
    ['Dd']
    ['sd']
    ['12']
    ['12']
    ['df']
    ['12', 'fe']
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Thu, 11 May 2023 16:06:19 UTC"
record: -1
